<!-- 
 *******************************************************************************
 * Copyright (c) 2009 itemis AG and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * committers of openArchitectureWare - initial API and implementation
 *******************************************************************************
-->
<!-- ===================================================================== -->
<!-- Custom targets called from a project's generated build.xml            -->
<!-- Set customBuildCallbacks=<path/to/this/file> in your build.properties.-->
<!-- ===================================================================== -->
<project name="Build specific targets and properties" default="regenerateAll">

	<target name="regenerateAll" depends="cleanGenerated,generateAll"/>

	<target name="generateAll">
		<emf.Ecore2Java model="${basedir}/model/xtextutil.ecore" 
					genModel="${basedir}/model/xtextutil.genmodel" 
					modelProject="${basedir}/org.eclipse.xtext" 
					modelProjectFragmentPath="emf-gen"
					reconcileGenmodel="reload"
					generateModelProject="false"
					generateJavaCode="true"
					generateEditProject="false"
					generateEditorProject="false">
		</emf.Ecore2Java>
		<emf.Ecore2Java model="${basedir}/model/parsetree.ecore" 
					genModel="${basedir}/model/parsetree.genmodel" 
					modelProject="${basedir}/org.eclipse.xtext" 
					modelProjectFragmentPath="emf-gen" 
					reconcileGenmodel="reload"
					generateModelProject="false" 
					generateJavaCode="true" 
					generateEditProject="false" 
					generateEditorProject="false"/>
		<!-- EMF always moves the ecore file next to the genmodel and chages the genmodel accordingly. -->
		<!-- Save the genmodel to restore it later --> 
		<copy file="${basedir}/model/xtext.genmodel" tofile="${basedir}/model/xtext.genmodel.copy" overwrite="true"></copy>
		<emf.Ecore2Java model="${basedir}/src-gen/org/eclipse/xtext/xtext.ecore" 
					genModel="${basedir}/model/xtext.genmodel" 
					modelProject="${basedir}/org.eclipse.xtext" 
					modelProjectFragmentPath="emf-gen" 
					reconcileGenmodel="reload" 
					generateModelProject="false" 
					generateJavaCode="true" 
					generateEditProject="false" 
					generateEditorProject="false"/>
		<!-- Restore old genmodel -->
		<copy file="${basedir}/model/xtext.genmodel.copy" tofile="${basedir}/model/xtext.genmodel" overwrite="true"></copy>
		<delete>
			<fileset file="${basedir}/model/xtext.genmodel.copy"></fileset>
			<fileset file="${basedir}/model/xtext.ecore"></fileset>
		</delete>
		<eclipse.refreshLocal resource="/" depth="infinite"/>
	</target>
	
	<target name="cleanGenerated">
		<delete verbose="true" quiet="true" includeemptydirs="true">
			<fileset dir="${basedir}/emf-gen" includes="**/*"/>
		</delete>		
		<eclipse.refreshLocal resource="/" depth="infinite"/>
	</target>
		
	<target name="pre.@dot" depends="generateAll"/>
	
	<target name="pre.clean" depends="cleanGenerated"/>  
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.jars                              -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.jars">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.jars                               -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.jars">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.sources                            -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the compilation target <name>                      -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="pre.name">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do during the compilation target <name>, after the compile   -->
	<!-- but before jaring.  Substitute "name" with the name of the compilation-->
	<!-- target, eg @dot                                                       -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.compile.name">
	</target>

	<target name="post.compile.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do after the compilation target <name>                       -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   jar.location - the location of the compilation results              -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.name">
	</target>

	<target name="post.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="pre.gather.bin.parts">
	</target>
		
	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="post.gather.bin.parts">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.sources                          -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.logs                             -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.logs">        
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.logs                              -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.logs">       
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target clean                                    -->
	<!-- Available parameters :                                                -->
	<!--   plugin.destination - final destination of the build                 -->
	<!--   build.result.folder - results of the compilation                    -->
	<!--   temp.folder - temporary folder                                      -->
	<!-- ===================================================================== -->
	<target name="post.clean">             
	</target>
</project>
